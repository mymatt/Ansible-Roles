---

- name: check if consul already installed
  stat:
    path: /usr/local/bin/consul
  register: consul_file_details

- name: update apt cache
  become: true
  apt:
    update_cache: true
  when: not consul_file_details.stat.exists


- name: Install dependencies
  become: true
  apt:
    name: "{{ packages }}"
    # state: latest
  vars:
    packages:
      - unzip
  when: not consul_file_details.stat.exists

- name: download consul
  become: true
  get_url:
    url: "{{ consul_url }}"
    dest: /usr/local/bin
  when: not consul_file_details.stat.exists

- name: Unarchive consul
  become: true
  unarchive:
    src: "/usr/local/bin/{{ consul_package_name }}"
    dest: /usr/local/bin
    remote_src: true
  when: not consul_file_details.stat.exists

- name: delete consul zip file
  become: true
  file:
    dest: "/usr/local/bin/{{ consul_package_name }}"
    state: absent
  when: not consul_file_details.stat.exists

# - name: Verify consul installation
#   shell: "consul --version"
#   register: consul_version
#
# - name: check consul
#   assert:
#     that:
#       - "'Consul' in consul_version.stdout"

- name: Create Consul data directory
  file:
    path: /tmp/consul
    state: directory
    # owner: vagrant
    # group: vagrant
    mode: "u=rwX,g=rwX,o=rwX"

- name: create directory for consul config files
  file:
    path: /tmp/consul.d/
    state: directory
    # mode: 0755
    mode: "u=rwX,g=rwX,o=rwX"

- name: move consul config template
  template:
    src: "/{{ destination }}/provisioners/roles/consul/templates/config.json.j2"
    dest: /tmp/consul.d/config.json
  tags:
    - launch

- name: Render consul Systemd Config
  template:
    src: "/{{ destination }}/provisioners/roles/consul/templates/consul.systemd.j2"
    dest: /etc/systemd/system/consul.service
    mode: 0644
  notify: restart consul

- name: ensure consul handler started
  meta: flush_handlers

- name: wait for consul api port before setting key/value
  wait_for:
    port: 8500
    delay: 15
    timeout: 300
    state: started
  when: agent == 'server'

- name: setup key/value store for active nginx weightings
  command: "sudo curl -X PUT -d '1' http://localhost:8500/v1/kv/{{ kv_path_web }}/{{ item_w }}"
  args:
    warn: false
  with_items: "{{ weight_web_list }}"
  loop_control:
    loop_var: item_w
  when: agent == 'server' and active_profile_web == item_w | regex_search(active_profile_web)

- name: setup key/value store for non-active nginx weightings
  command: "sudo curl -X PUT -d '0' http://localhost:8500/v1/kv/{{ kv_path_web }}/{{ item_a }}"
  args:
    warn: false
  with_items: "{{ weight_web_list }}"
  loop_control:
    loop_var: item_a
  when: agent == 'server' and active_profile_web != item_a | regex_search(active_profile_web)

- name: setup key/value store to switch between splash and weighted main
  command: "sudo curl -X PUT -d '0' http://localhost:8500/v1/kv/{{ kv_path_web }}/{{ start_web }}"
  args:
    warn: false
