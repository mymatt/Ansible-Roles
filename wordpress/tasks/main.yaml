---

- name: update apt cache
  become: true
  apt:
    update_cache: yes

- name: Install Wordpress PHP requisites
  apt:
    pkg:
      - php
      - php-mysql
      - php-common
      - php-tidy
      - php-xml
      - php-xmlrpc
      - php-mbstring
      - php-memcached
      - php-curl
      - php-zip
      - php-gd
      - php-bcmath
      - php-imagick
    update_cache: yes
    state: present

- name: Install Wordpress Apache requisites
  apt:
    pkg:
      - apache2
    update_cache: yes
    state: present

- name: Create Wordpress home
  file:
    path: "{{ apache_dir }}"
    state: directory
    state: present

- name: Download Wordpress
  get_url:
    url: "{{ wordpress_url }}"
    dest: "/tmp/{{ wordpress_file }}"

- name: Unarchive Wordpress
  become: true
  unarchive:
    src: "/tmp/{{ wordpress_file }}"
    dest: "{{ apache_dir }}"
    #remote_src: true

- name: Delete Wordpress file
  become: true
  file:
    dest: "/tmp/{{ wordpress_file }}"
    state: absent

# check if ownership is apache
- name: Ownership/Permissions of Wordpress content directory
  file:
    path: "{{ apache_dir }}/wp-content"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
    mode: '0755'

- name: Wordpress Server config directory
  shell: "sudo sed -i -e 's/^DocumentRoot.*$/DocumentRoot \"\\/var\\/www\\/wordpress\"/' /etc/apache2/sites-enabled/000-default.conf"

- name: Enable override for S3 bucket images
  shell: "sed -i -e "/^<Directory \\/var\\/www\\/>.*/{n;n;s/None.*$/All/;}" /etc/apache2/apache2.conf"

- name: Render wp-config file
  become: true
  template:
    src: "/{{ destination }}/provisioners/roles/wordpress/templates/wp-config.php.j2"
    dest: "{{ apache_dir }}/wp-config.php"

- name: get wordpress file from S3 bucket
  aws_s3:
    bucket: "{{ s3_bucket_backup }}"
    object: "/{{ www_prefix }}/{{ backup_file }}"
    dest: "/{{ dest_dir }}/{{ backup_file }}"
    mode: get
  become: true
  when: import_www == 'true'

- name: unarchive wordpress files to /var/www/wordpress
  unarchive:
    src: "/{{ dest_dir }}/{{ backup_file }}"
    dest: "{{ apache_dir }}"
  when: import_www == 'true'

- name: Render htaccess file
  become: true
  template:
    src: "/{{ destination }}/provisioners/roles/wordpress/templates/.htaccess.j2"
    dest: "{{ apache_dir }}/.htaccess"

- name: Enable apache
  service:
   name: apache
   state: started
   enabled: true
