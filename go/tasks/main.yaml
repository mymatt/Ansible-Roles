---

- name: check if go installed already
  stat:
    path: /usr/local/go/bin/go
  register: go_file_details

- name: download GO
  become: true
  get_url:
    url: "{{ go_url }}"
    dest: /usr/local/
  when: not go_file_details.stat.exists

- name: Unarchive GO
  become: true
  unarchive:
    src: "/usr/local/{{ go_package_name }}"
    dest: /usr/local/
    remote_src: yes
  when: not go_file_details.stat.exists

- name: delete go tar file
  become: true
  file:
    dest: "/usr/local/{{ go_package_name }}"
    state: absent
  when: not go_file_details.stat.exists

- name: Adding the path to bashrc
  lineinfile:
    path: /home/ubuntu/.bashrc
      # /home/vagrant/.bashrc
    line: 'export PATH=$PATH:/usr/local/go/bin'
    insertafter: 'EOF'
    state: present
  when: not go_file_details.stat.exists

- name: Adding the Go path to bashrc
  lineinfile:
    path: /home/ubuntu/.bashrc
      # /home/vagrant/.bashrc
    line: 'export GOPATH=/{{ destination }}/go'
      # 'export GOPATH=/Vagrant/go'
    insertafter: 'EOF'
    state: present
  when: not go_file_details.stat.exists

- name: Source the bashrc file
  shell: . /home/ubuntu/.bashrc
  # /home/vagrant/.bashrc
  when: not go_file_details.stat.exists

- name: create folder
  file:
    path: "{{ site_location }}/files/templates/"
    state: directory
#
# - name: copy web files
#   copy:
#     src: "/{{ destination }}/provisioners/roles/go/files"
#     dest: "{{ site_location }}"

- name: copy index.html template
  become: true
  template:
    src: "/{{ destination }}/provisioners/roles/go/templates/index.html.j2"
    dest: "{{ site_location }}/files/templates/index.html"

- name: copy main.go template
  become: true
  template:
    src: "/{{ destination }}/provisioners/roles/go/templates/main.go.j2"
    dest: "{{ site_location }}/files/main.go"

- name: Render go Systemd Config
  template:
    src: "/{{ destination }}/provisioners/roles/go/templates/go.systemd.j2"
    dest: /etc/systemd/system/go.service
    mode: 0644
  notify: restart go
